bool isEvenOddTree(TreeNode* root) {
    if (root == nullptr) {
        return false;
    }

    queue<TreeNode*> q;
    q.push(root);
    int level = 0;

    while (!q.empty()) {
        int size = q.size();
        int prevVal = level % 2 == 0 ? INT_MIN : INT_MAX;

        for (int i = 0; i < size; ++i) {
            TreeNode* node = q.front();
            q.pop();

            if (level % 2 == 0) { // Even level
                if (node->val % 2 == 0 || node->val <= prevVal) {
                    return false;
                }
            } else { // Odd level
                if (node->val % 2 != 0 || node->val >= prevVal) {
                    return false;
                }
            }

            prevVal = node->val;

            if (node->left != nullptr) {
                q.push(node->left);
            }
            if (node->right != nullptr) {
                q.push(node->right);
            }
        }

        level++;
    }

    return true;
}